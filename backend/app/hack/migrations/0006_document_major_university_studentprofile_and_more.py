# Generated by Django 5.2.6 on 2025-09-05 07:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hack', '0005_alter_emailverificationtoken_expires_at'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=True)),
                ('category', models.CharField(choices=[('academic', 'Академические'), ('language', 'Языковые'), ('personal', 'Личные'), ('financial', 'Финансовые'), ('visa', 'Визовые')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_italian', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(max_length=100)),
                ('duration_years', models.IntegerField(default=3)),
                ('degree_type', models.CharField(choices=[('bachelor', 'Бакалавриат'), ('master', 'Магистратура'), ('phd', 'Докторантура')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_italian', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('website', models.URLField(blank=True)),
                ('logo', models.URLField(blank=True)),
                ('ranking_italy', models.IntegerField(blank=True, null=True)),
                ('ranking_world', models.IntegerField(blank=True, null=True)),
                ('founded_year', models.IntegerField(blank=True, null=True)),
                ('student_count', models.IntegerField(blank=True, null=True)),
                ('ielts_min', models.FloatField(blank=True, null=True)),
                ('toefl_min', models.IntegerField(blank=True, null=True)),
                ('italian_level_min', models.CharField(blank=True, max_length=10)),
                ('tuition_fee_eu', models.IntegerField(blank=True, null=True)),
                ('tuition_fee_non_eu', models.IntegerField(blank=True, null=True)),
                ('living_cost_monthly', models.IntegerField(blank=True, null=True)),
                ('has_scholarships', models.BooleanField(default=False)),
                ('scholarship_info', models.TextField(blank=True)),
                ('application_deadline', models.DateField(blank=True, null=True)),
                ('scholarship_deadline', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('birth_date', models.DateField()),
                ('nationality', models.CharField(default='Kazakhstan', max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('education_level', models.CharField(choices=[('high_school', '12 класс'), ('university_1', '1 курс университета'), ('university_2', '2 курс университета'), ('university_3', '3 курс университета'), ('university_4', '4 курс университета'), ('bachelor', 'Бакалавр'), ('master', 'Магистр')], default='high_school', max_length=20)),
                ('current_school', models.CharField(blank=True, max_length=200)),
                ('graduation_year', models.IntegerField(blank=True, null=True)),
                ('ielts_score', models.FloatField(blank=True, null=True)),
                ('ielts_date', models.DateField(blank=True, null=True)),
                ('toefl_score', models.IntegerField(blank=True, null=True)),
                ('toefl_date', models.DateField(blank=True, null=True)),
                ('italian_level', models.CharField(blank=True, choices=[('A1', 'A1 - Начальный'), ('A2', 'A2 - Элементарный'), ('B1', 'B1 - Средний'), ('B2', 'B2 - Выше среднего'), ('C1', 'C1 - Продвинутый'), ('C2', 'C2 - Владение')], max_length=20)),
                ('preferred_majors', models.JSONField(blank=True, default=list)),
                ('preferred_cities', models.JSONField(blank=True, default=list)),
                ('budget_min', models.IntegerField(blank=True, null=True)),
                ('budget_max', models.IntegerField(blank=True, null=True)),
                ('current_step', models.CharField(choices=[('profile', 'Заполнение профиля'), ('ielts', 'Подготовка к IELTS'), ('tolc', 'Подготовка к TOLC'), ('universities', 'Выбор университетов'), ('universitaly', 'Регистрация в Universitaly'), ('codice', 'Получение Codice Fiscale'), ('dov', 'Легализация документов'), ('visa', 'Получение визы'), ('completed', 'Завершено')], default='profile', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Не начато'), ('in_progress', 'В процессе'), ('completed', 'Завершено'), ('verified', 'Проверено'), ('rejected', 'Отклонено')], default='not_started', max_length=20)),
                ('file_url', models.URLField(blank=True)),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_documents', to='hack.document')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='hack.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ProgressStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_name', models.CharField(max_length=50)),
                ('step_description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('not_started', 'Не начато'), ('in_progress', 'В процессе'), ('completed', 'Завершено'), ('skipped', 'Пропущено')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_steps', to='hack.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('deadline', 'Дедлайн'), ('reminder', 'Напоминание'), ('update', 'Обновление'), ('achievement', 'Достижение'), ('system', 'Системное')], max_length=50)),
                ('is_read', models.BooleanField(default=False)),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='hack.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AIRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(choices=[('university', 'Рекомендация университета'), ('major', 'Рекомендация направления'), ('document', 'Рекомендация по документам'), ('timeline', 'Рекомендация по срокам'), ('general', 'Общая рекомендация')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('urgent', 'Срочно')], default='medium', max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('is_applied', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_recommendations', to='hack.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_type', models.CharField(choices=[('profile_completed', 'Профиль завершен'), ('ielts_passed', 'IELTS сдан'), ('tolc_passed', 'TOLC сдан'), ('university_applied', 'Подана заявка в университет'), ('document_uploaded', 'Документ загружен'), ('visa_obtained', 'Виза получена'), ('streak_7', '7 дней подряд'), ('streak_30', '30 дней подряд')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('points', models.IntegerField(default=10)),
                ('icon', models.CharField(default='trophy', max_length=50)),
                ('unlocked_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='hack.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='StudyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_plans', to='hack.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='StudyPlanItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateField()),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('study_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='hack.studyplan')),
            ],
            options={
                'ordering': ['order', 'due_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('submitted', 'Подана'), ('under_review', 'На рассмотрении'), ('accepted', 'Принята'), ('rejected', 'Отклонена'), ('waitlisted', 'В резерве')], default='draft', max_length=20)),
                ('application_date', models.DateTimeField(blank=True, null=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='hack.major')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='hack.studentprofile')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='hack.university')),
            ],
        ),
        migrations.CreateModel(
            name='UniversityMajor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_available', models.BooleanField(default=True)),
                ('seats_available', models.IntegerField(blank=True, null=True)),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='universities', to='hack.major')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='majors', to='hack.university')),
            ],
            options={
                'unique_together': {('university', 'major')},
            },
        ),
    ]
